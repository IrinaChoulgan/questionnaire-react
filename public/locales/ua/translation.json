{
  "titleReact": "В цьому блоці тебе чекає 13 теоретичних питань з React",
  "titleJs": "В цьому блоці тебе чекає 32 теоретичних питань з JavaScript",
  "titleHtml": "В цьому блоці тебе чекає 16 теоретичних питань з HTML та CSS",
  "title": "Перевір свої теоретичні знання з React, JavaScript та HTML/CSS",
  "cardButton": "Розпочати",
  "textResult": "Вітаємо! Результат опитування:",
  "btnResult": "Спробувати знову",
  "btnOnPageTest": "На головну",
  "question_html": [
    {
      "title": "Відповідає за наповнення веб-сторінки контентом, структуру і зміст:",
      "variants": ["HTML", "CSS", "JavaScript"],
      "correct": 0
    },
    {
      "title": "Як називаються найменші будівельні блоки, з яких складається будь-яка веб-сторінка?",
      "variants": ["атрибути", "теги"],
      "correct": 1
    },
    {
      "title": "Чи є тег img парним?",
      "variants": ["Так", "Ні"],
      "correct": 1
    },
    {
      "title": "Який тег призначений для зберігання службової інформації про сторінку: заголовок, опис, кодування тощо?",
      "variants": ["html", "body", "head"],
      "correct": 2
    },
    {
      "title": "Займає повністю увесь рядок, незалежно від обсягу його контенту:",
      "variants": ["inline element", "block-level element"],
      "correct": 1
    },
    {
      "title": "Великі файли, що не потребують прозорого фону або анімації",
      "variants": ["JPEG", "PNG", "webP"],
      "correct": 0
    },
    {
      "title": "Який тег використовують для фінальної частинини всієї сторінки, її розділу або статті. Часто містить копірайт, список посилань на соціальні мережі, контактну інформацію і таке інше. Може бути кілька на сторінці.?",
      "variants": ["main", "header", "footer"],
      "correct": 2
    },
    {
      "title": "Для якого псевдокласу вірним є опис: активується, коли інтерактивний елемент (посилання, кнопка, поле форми) отримує фокус під час навігації по сторінці клавіатурою (клавішею Tab)?",
      "variants": [":focus", ":hover", ":active"],
      "correct": 0
    },
    {
      "title": "Яка властивість задає різні декоративні підкреслення та інші ефекти тексту?",
      "variants": ["text-decoration", "text-transform", "text-align"],
      "correct": 0
    },
    {
      "title": "Який тип блокової моделі використовується в браузерах за замовчуванням?",
      "variants": ["border-box", "content-box"],
      "correct": 1
    },
    {
      "title": "Збірна властивість контролює зовнішні відступи від рамки для всіх сторін елемента:",
      "variants": ["margin", "border", "padding"],
      "correct": 0
    },
    {
      "title": "Яка властивість flexbox встановлює напрямок головної осі, визначаючи напрямок елементів в контейнері: ",
      "variants": ["align-items", "flex-wrap", "flex-direction"],
      "correct": 2
    },
    {
      "title": "Що відбудеться з елементами при justify-content: space-between",
      "variants": [
        "елементи рівномірно розподіляться на головній осі",
        "елементи притиснуться до кінця осі",
        "елементи розподіляються рівномірно, але лівий і правий елемент відстають від меж контейнера на половину проміжку між іншими елементами"
      ],
      "correct": 0
    },
    {
      "title": "Як називаються зображення, які несуть смислове навантаження, належать до змісту сторінки і допомагають донести до користувача корисну для нього інформацію?",
      "variants": ["Декоративні зображення", "Контентні зображення", "Растрові зображення"],
      "correct": 1
    },
    {
      "title": "Який вид позиціонування використовується для закріплених хедерів з навігацією, спливаючих вікон, чатів з менеджером на сторінках інтернет-магазинів тощо?",
      "variants": ["sticky position", "absolute position", "fixed position"],
      "correct": 2
    },
    {
      "title": "Якому типу версти відповідає опис: Має кілька варіантів відображення, переходи між ними плавні, елементи і контейнер тягнуться як гумові:",
      "variants": ["responsive", "adaptive"],
      "correct": 0
    }
  ],
  "question_react": [
    {
      "title": "React - це ... ?",
      "variants": ["Бібліотека", "Фреймворк", "Додаток"],
      "correct": 0
    },
    {
      "title": "Компонент - це ... ",
      "variants": [
        "Сам додаток",
        "Абстракція, легковагова копія реального DOM-дерева у вигляді JSON-документа",
        "Основні будівельні блоки React-застосунків, за допомогою яких інтерфейс розділяється на незалежні частини."
      ],
      "correct": 2
    },
    {
      "title": "Що таке JSX?",
      "variants": ["Це простий HTML", "Це функція", "Це той же HTML, але з можливістю виконувати JS-код"],
      "correct": 2
    },
    {
      "title": "Яку команду необхідно прописати в терміналі, щоб створити застосунок у поточній папці?",
      "variants": ["npx create-react-app .", "npx create-react-app my-app", "npx create-react-app"],
      "correct": 0
    },
    {
      "title": "Як передаються пропси?",
      "variants": [
        "вгору по дереву від батьківського компонента",
        "вниз по дереву від батьківського компонента",
        "Як завгодно"
      ],
      "correct": 1
    },
    {
      "title": "Для того щоб відрендерити колекцію однотипних елементів, використовується метод...",
      "variants": ["Array.prototype.map()", "Array.length", "Обидва варіанти вірні"],
      "correct": 0
    },
    {
      "title": "Чи можна використовувати індекс єлемента для ключа під час створення елементів колекції",
      "variants": ["Так", "Ні"],
      "correct": 0
    },
    {
      "title": "Розташуйте життєві цикли в логічному порядку:",
      "variants": [
        "componentDidUpdate, componentWillUnmount, componentDidMount",
        "componentDidMount, componentWillUnmount, componentDidUpdate",
        "componentDidMount, componentDidUpdate, componentWillUnmount"
      ],
      "correct": 2
    },
    {
      "title": "Який життєвий цикл добре підходить для прибирання за собою: слухачі, таймери, HTTP-запити?",
      "variants": ["componentWillUnmount", "componentDidMount", "componentDidUpdate"],
      "correct": 0
    },
    {
      "title": "За допомогою якого хука у компонентах-функціях можна виконувати всі ці «ефекти», змоделювавши роботу трьох методів життєвого циклу - componentDidMount, componentDidUpdate, componentWillUnmount, об'єднавши їх в один API?",
      "variants": ["useState", "useEffect", "useContaxt"],
      "correct": 1
    },
    {
      "title": "В чому різниця між <Link> та <NavLink>?",
      "variants": [
        "Компонент <NavLink> відрізняється тільки тим, що може мати додаткові стилі, якщо поточний URL збігається зі значенням пропcа to. ",
        "Відрізняється тім, що <NavLink> при натисканні переадресовує користувача на панель навігації",
        "Нічим не відрізняються"
      ],
      "correct": 0
    },
    {
      "title": "Об'єкти, які передають дані з компонентів у стор, тим самим сигналізуючи про те, яка подія сталася в інтерфейсі, це...",
      "variants": ["Пропси", "Редюсери", "Екшени"],
      "correct": 2
    },
    {
      "title": "Унікальний зашифрований рядок, який містить три блоки: заголовок (header), набір полів (payload) та сигнатуру - це...",
      "variants": ["JSON Web Token", "HTTP-запит", "URL"],
      "correct": 0
    }
  ],
  "qustion_js": [
    {
      "title": "Підключаючи декілька JavaScript-файлів до сторінки, інтерпретатор обробляє їх в якому порядку?",
      "variants": [
        "В довільному порядку",
        "в тому, якому вони зазначені в HTML-файлі",
        "В залежності від функцій, які в скрипті"
      ],
      "correct": 1
    },
    {
      "title": "Методу рядка, який зробить усі літери великими - це: ",
      "variants": ["toUpperCase()", "toLowerCase()"],
      "correct": 0
    },
    {
      "title": "Яку змінну не можна перевизначити після її оголошення?",
      "variants": ["var", "let", "const"],
      "correct": 2
    },
    {
      "title": "Яке значення за замовчуванням присвоюється let",
      "variants": ["underfined", "null", "0"],
      "correct": 0
    },
    {
      "title": "Як називають + - * / % в математичних операторах?",
      "variants": ["дії", "оператори", "операнди"],
      "correct": 1
    },
    {
      "title": "Що робить метод Number.parseInt()",
      "variants": [
        "парсить з рядка ціле число",
        "парсить з рядка дробове число",
        "округляє до другого знака після коми"
      ],
      "correct": 0
    },
    {
      "title": "Що повертає метод indexOf() в тому випадку, якщо елемент не знайдено?",
      "variants": ["null", "underfined", "-1"],
      "correct": 2
    },
    {
      "title": "Який синтаксис буде вірним при записті тернарного оператора?",
      "variants": [
        "<умова> ? <вираз_якщо_умова_правдива> : <вираз_якщо_умова_хибна>",
        "<умова> ? <вираз_якщо_умова_хибна> : <вираз_якщо_умова_правдива>",
        "<умова> : <вираз_якщо_умова_правдива> ? <вираз_якщо_умова_хибна>"
      ],
      "correct": 0
    },
    {
      "title": "Цикл, який виконується, доки правдива якась умова, зазначена до його початку. Ця умова перевіряється до виконання тіла циклу, тому тіло може не виконатися жодного разу, якщо умова від самого початку - хибна. Це:",
      "variants": ["Цикл while", "do...while", "for"],
      "correct": 0
    },
    {
      "title": "Який оператор перериває не увесь цикл, а тільки виконання поточної ітерації?",
      "variants": ["breake", "continue", "обидва варіанти вірні"],
      "correct": 1
    },
    {
      "title": "Структура даних для зберігання і маніпулювання колекцією індексованих значень, це:",
      "variants": ["Масиви", "Об'єкти", "Функція"],
      "correct": 0
    },
    {
      "title": "Який із методів масиву об'єднує елементи масиву у рядок?",
      "variants": ["split(delimiter)", "join(delimiter)", "includes(value)"],
      "correct": 1
    },
    {
      "title": "Який метод додає один або декілька елементів наприкінці масиву, без необхідності зазначати індекси елементів, що додаються?",
      "variants": ["push()", "pop()", "concat()"],
      "correct": 0
    },
    {
      "title": "В круглих дужках після імені функції зазначаються ... - перелік даних, які функція очікує на момент виклику.",
      "variants": ["аргументи", "параметри"],
      "correct": 1
    },
    {
      "title": "Що поверне функція у випадку відсутності return в тілі функції?",
      "variants": ["null", "буде помилка", "underfined"],
      "correct": 2
    },
    {
      "title": "Звичайне оголошення змінної, значенням якої буде функція, це?",
      "variants": ["function expression", "function declaration"],
      "correct": 0
    },
    {
      "title": "Який з методів об'єкта приймає об'єкт і повертає масив ключів його власних властивостей?",
      "variants": ["Object.keys(obj)", "Object.keys(obj)", "Object.entries(obj)"],
      "correct": 1
    },
    {
      "title": "Як називається функція, яка передається іншій функції як аргумент, а та, в свою чергу, викликає передану функцію?",
      "variants": ["higher order function", "callback"],
      "correct": 1
    },
    {
      "title": "Який з перебираючих методів масиву дозволяє знайти і повернути перший відповідний елемент, після чого перебирання масиву припиняється?",
      "variants": ["map()", "filter()", "find()"],
      "correct": 2
    },
    {
      "title": "Який з перебираючих методів масиву перевіряє, чи проходить хоча б один елемент масиву тест колбек-функції? Повертає true або false.",
      "variants": ["some()", "every()", "flatMap()"],
      "correct": 0
    },
    {
      "title": "Чи мають стрілочні функції свій this",
      "variants": ["Так", "Ні"],
      "correct": 1
    },
    {
      "title": "Спосіб опису сутності, що визначає стан і поведінку, яка залежить від цього стану, а також правила для взаємодії з цією сутністю (контракт), це...",
      "variants": ["Екземпляр", "Інтерфейс", "Клас"],
      "correct": 2
    },
    {
      "title": "Як називається найвищий елемент в DOM?",
      "variants": ["root node", "parent node", "child node"],
      "correct": 0
    },
    {
      "title": "Як називається прийом, який контролює кількість разів, яку функція може бути викликана протягом певного проміжку часу?",
      "variants": ["debounce", "throttle"],
      "correct": 1
    },
    {
      "title": "... - це збирач JS-модулів, менеджер модульних залежностей, який аналізує дерево залежностей і створює один або декілька результуючих файлів, що містять всю кодову базу проекту.",
      "variants": ["Webpack", "package", "node.js"],
      "correct": 0
    },
    {
      "title": "Який метод дозволяє запланувати запуск функції через певний час?",
      "variants": ["throttle", "setTimeout()", "setInterval()"],
      "correct": 1
    },
    {
      "title": "Який з трьох станів промісів можна описати наступним чином: операція виконана успішно з будь-яким результатом?",
      "variants": ["fulfilled", "pending", "rejected"],
      "correct": 0
    },
    {
      "title": "Який з методів промісів «відловлює» помилки?",
      "variants": ["then()", "finally()", "catch()"],
      "correct": 2
    },
    {
      "title": "Який з методів повертає виконаний або відхилений проміс, залежно від того, з яким результатом завершиться «найшвидший» з переданих промісів, зі значенням або причиною його відхилення?",
      "variants": ["Promise.race()", "Promise.all()", "Promise.resolve()"],
      "correct": 0
    },
    {
      "title": "Що називається набором чітко визначених правил зв'язку між різними програмними компонентами?",
      "variants": ["API", "REST", "REST API"],
      "correct": 0
    },
    {
      "title": "Який з HTTP-методів дозволяє отримати набір ресурсів або один ресурс?",
      "variants": ["POST", "PATCH", "GET"],
      "correct": 2
    },
    {
      "title": "Який з HTTP-методів дозволяє отримати набір ресурсів або один ресурс?",
      "variants": ["POST", "PATCH", "GET"],
      "correct": 2
    }
  ]
}
